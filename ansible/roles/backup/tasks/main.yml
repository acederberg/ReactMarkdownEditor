---
# mongodb container tasks

- include_vars : "../vars/main.yml"


- name : "Get current time as an iso string."
  tags : [ "backup", "capture" ]
  shell : date +%F-%H-%M
  register : now


- name : "Make a directory for the backups inside the ansible home directory if it does not exist."
  tags : [ "backup", "capture" ]
  shell : test -d {{remote_backups_dir}} || mkdir {{remote_backups_dir}}


- name : "Create archives."
  # By default will tar before gzing
  tags : [ "backup", "capture" ]
  become : true
  archive :
    owner : ansible
    group : ansible 
    format : gz
    path : '{{item.key}}'
    dest : '{{item.value}}_{{now.stdout}}.tar.gz'
  loop : '{{ backup_mapping | dict2items }}'


- name : "Scp to ansible-runner."
  # This is a variable to be input upon the execution of the playbook.
  tags : [ "backup", "capture" ]
  become : true
  fetch :
    src : '{{item.value}}_{{now.stdout}}.tar.gz'
    dest : '{{local_backups_dir}}/'
    flat : true
  loop : '{{ backup_mapping | dict2items }}'


- name : "Create folder to unpack backups into."
  tags : [ "backup", "distribute" ]
  shell : test -d {{ansible_workdir}} || mkdir {{ansible_workdir}}
  when : |
    backup_timestamp is defined


- name : "Move backups to their appropriate locations."
  tags : [ "backup", "distribute" ]
  unarchive : 
    force : true
    src : '{{item.value}}_{{backup_timestamp}}.tar.gz'
    remote_src : false
    dest : '{{ansible_workdir}}'
    owner : ansible
    group : ansible 
  loop : '{{ backup_mapping | dict2items }}'
  when : |
    backup_timestamp is defined


- name : "Destroy all artifacts"
  tags : [ "backup", "capture" ]
  become : true
  shell : rm -r {{remote_backups_dir}}

