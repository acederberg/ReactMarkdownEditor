---

- include_vars : '../vars/main.yml'

# Security

- name : "Install dependencies"
  tags : [ install, gitlab-runner ]
  block :

  - name : "Install gitlab-runner."
    become : true
    apt : 
      deb : "https://gitlab-runner-downloads.s3.amazonaws.com/latest/deb/gitlab-runner_amd64.deb"
      state : 'present'

  - name : "Install python-gitlab"    
    pip : 
      name : python-gitlab
      state : present


- name : "Set passwords"
  tags : [ install, gitlab-runner, security ]
  block :

  - name : "Add the runner to the docker group and sudoers group."
    become : true
    user :
      name : gitlab-runner
      groups : docker,sudo
      password : "{{ password0|password_hash('sha512') }}"

  - name : "Add the ansible user to the docker group."
    # This user is build in to the vagrantfiles
    become : true
    user :
      name : ansible
      groups : sudo,docker
      password : "{{ password1 | password_hash('sha512') }}"

  - name : "Change the vagrant users password."
    become : true
    user :
      name : vagrant
      password : "{{ password2 | password_hash( 'sha512' ) }}"


# registration and configuration

- name : "Configuring gitlab-runner user..."
  tags : [ gitlab-runner ]
  block :
  - name : "Add a .bashrc for gitlab-ci script to source important environment variables from."
    become : true
    template :
      group : gitlab-runner
      owner : gitlab-runner
      force : true
      src : './.bashrc.j2'
      dest : '/home/gitlab-runner/.bashrc'


  - name : "Remove .bash_logout and .profile file  since it may exist and will cause issues with gitlab."
    file : 
      path : '/home/gitlab-runner/{{item}}'
      state : absent
    with_items : 
      - .profile
      - .bash_logout


- name : "Registering gitlab-runner..."
  tags : [ gitlab-runner ]
  block :
  - name : "Check if gitlab runner exists."
    become : true
    raw : cat /etc/gitlab-runner/config.toml | grep runners | wc --word
    register : runner_exists

  - name : debug
    debug : 
      msg : '{{ runner_exists }}'

  - name : "If no gitlab runner, register one."
    become : true
    raw : |
      gitlab-runner register \
        --non-interactive \
        --url "https://gitlab.com" \
        --registration-token "{{ registration_token }}" \
        --executor "shell" \
        --description "Vagrant runner." \
        --tag-list "build,test" 
    when:
      runner_exists.stdout == '0'


# Application configs

# This will fail before any ci jobs are done on the gitlab runner.
# For optimal performence, perform the first stage of the pipeline,
# stop, run this task and the subsequent task, and restart the pipeline.
- name : "Distribute configurations for builds and tests."
  tags : [ gitlab-runner, rn ]
  block :

  - name : "See if the 'ReactMarkdownEditor' directory exists. If it does, saves its absolute path."
    raw : find /home/gitlab-runner -name ReactMarkdownEditor 
    register : gitlab_runner_filepath


  # UI uses this to build in gitlab ci
  - name : "Render ui.env.prod."
    become : true
    template :
      group : gitlab-runner
      owner : gitlab-runner
      force : true
      src : './ui.env.prod'
      dest : '{{ gitlab_runner_filepath.stdout.__str__( ).strip() }}/ui/.env.prod'
    when : |
      gitlab_runner_filepath.rc == 0

  # Api uses this to test in gitlab ci
  - name : "Render api.env.prod"
    become : true
    template : 
      group : gitlab-runner
      owner : gitlab-runner
      force : true
      src : './api.env.test'
      dest : '{{ gitlab_runner_filepath.stdout.__str__( ).strip() }}/api/.env.test'
    when : |
      gitlab_runner_filepath.rc == 0

  # Add a blank prod config for api since we don't actually run the entrypoint for built containers.
  # Plus it is stupid to share secrets 
  - name : Touch api/.env.prod for prod build.
    file :
      group : gitlab-runner
      owner : gitlab-runner
      force : true
      path : '{{ gitlab_runner_filepath.stdout.__str__().strip() }}/api/.env.prod'
      state : file
    when : |
      gitlab_runner_filepath.rc == 0


# Image pushing.

- name : "Push Images"
  tags : [ gitlab-runner, distribute ]
  block :

  - name : "Login to dockerhub."
    community.docker.docker_login :
      username : '{{dockerhub_username}}'
      password : '{{dockerhub_password}}'

  - name : "DOCKER: Push production images."
    community.docker.docker_image:
      # Object
      repository : '{{ dockerhub_repo }}'
      name : '{{ dockerhub_repo }}'
      tag : '{{ item }}'
      # Action
      source : local
      push : true
      #state : present
    loop :
    - api_prod
    - ui_prod  

  when :
    push_to_dockerhub is defined
