---
- include_vars : '../vars/main.yml'
- name : "Install gitlab-runner."
  tags : [ install, gitlab-runner ]
  become : true
  apt : 
    deb : "https://gitlab-runner-downloads.s3.amazonaws.com/latest/deb/gitlab-runner_amd64.deb"
    state : 'present'

- name : "Add the runner to the docker group and sudoers group."
  tags : [ install, gitlab-runner ]
  become : true
  user :
    name : gitlab-runner
    groups : docker,sudo
    password : "{{ password0|password_hash('sha512') }}"
    
- name : "Add the anisible user to the docker group."
  # This user is build in to the vagrantfiles
  tags : [ install, gitlab-runner, security ]
  become : true
  user :
    name : ansible
    groups : sudo,docker
    password : "{{ password1 | password_hash('sha512') }}"


- name : "Install python-gitlab"    
  tags : [ install, gitlab-runner, rn ]
  pip : 
    name : python-gitlab
    state : present


- name : "Change the vagrant users password."
  tags : [ install, gitlab-runner, security ]
  become : true
  user :
    name : vagrant
    password : "{{ password2 | password_hash( 'sha512' ) }}"


- name : "Add a .bashrc for gitlab-ci script to source important environment variables from."
  tags : [ gitlab-runner ]
  become : true
  template :
    group : gitlab-runner
    owner : gitlab-runner
    force : true
    src : './.bashrc.j2'
    dest : '/home/gitlab-runner/.bashrc'


- name : "Remove .bash_logout and .profile file  since it may exist and will cause issues with gitlab."
  tags : [ gitlab-runner, current ]
  file : 
    path : '/home/gitlab-runner/{{item}}'
    state : absent
  with_items : 
    - .profile
    - .bash_logout


- name : "Check if gitlab runner exists."
  tags : [ gitlab-runner, rn ]
  become : true
  raw : $( cat /etc/gitlab-runner/config.toml  | grep runners | test $( wc --word ) -eq 0  ) && echo 1 || echo 0
  register : runner_exists


- name : "print"
  tags : [ gitlab-runner, rn ]
  debug : 
    msg : '{{runner_exists}}'


- name : "If no gitlab runner, register one."
  tags : [ gitlab-runner, rn ]
  become : true
  raw : |
    gitlab-runner register \
      --non-interactive \
      --url "https://gitlab.com" \
      --registration-token "{{ registration_token }}" \
      --executor "shell" \
      --description "Vagrant runner." \
      --tag-list "build,test" 

  when:
    runner_exists.rc == 0


- name : "If fresh gitlab-runner, run the git pull task."
  tags : [ gitlab-runner, rn ]
  raw : |
    gitlab-runner exec shell 
  when : 
    runner_exists.rc == 0


# - name : "Register gitlab-runner."
#   community.general.gitlab_runner : 
#     api_url : https://gitlab.com
#     api_token : '{{ runner_token }}'
#     registration_token : '{{ registration_token }}'
#     description : 'Vagrant runner'
#     state : present
#     active : true
#     project : adrn
#     tag_list : [ 'build', 'test' ]
# 

# This will fail before any ci jobs are done on the gitlab runner.
# For optimal performence, perform the first stage of the pipeline,
# stop, run this task and the subsequent task, and restart the pipeline.
- name : "See if the 'ReactMarkdownEditor/ui' directory exists. If it does, saves its absolute path."
  tags : [ gitlab-runner ]
  raw : find /home/gitlab-runner -name ui 
  register : gitlab_runner_ui_filepath


- name : "Render the template into the appropraite loaction."
  tags : [ gitlab-runner ]
  become : true
  template :
    group : gitlab-runner
    owner : gitlab-runner
    force : true
    src : './ui.env.prod'
    dest : '{{ gitlab_runner_ui_filepath.stdout.__str__( ).strip() }}/.env.prod'
  when : |
    gitlab_runner_ui_filepath.rc == 0


- name : "Login to dockerhub."
  tags : [ gitlab-runner, distribute, current ]
  community.docker.docker_login :
    username : '{{dockerhub_username}}'
    password : '{{dockerhub_password}}'
  when : 
    push_to_dockerhub is defined


- name : "DOCKER: Pull production ui images."
  tags : [ gitlab-runner, distribute, current ]
  community.docker.docker_image:
    # Object
    repository : '{{ dockerhub_repo }}'
    name : '{{ dockerhub_repo }}'
    tag : '{{ item }}'
    # Action
    source : local
    push : true
    #state : present

  loop :
  - api_prod
  - ui_prod  

  when :
    push_to_dockerhub is defined
